plugins {
	id "org.xtext.xtend" version "2.0.4" 
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'java-library-distribution'

group 'yamtl'
version '0.0.5-SNAPSHOT'

mainClassName = 'ttc19.LiveContestDriver'
applicationDefaultJvmArgs = ["-Xms4g", "-Xmx12g"]


//jar {
//	manifest {
//	  attributes(
//		'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
//		'Main-Class': mainClassName
//	  )
//	}
//}

eclipse {
	project {
	  name = 'ttc2019.live.EMFSolutionYAMTL'
	  buildCommand 'org.eclipse.jdt.core.javabuilder'
	  buildCommand 'org.eclipse.ajdt.core.ajbuilder'
	  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
	  buildCommand 'org.eclipse.wst.common.project.facet.core.builder'

	  natures 'org.eclipse.jdt.core.javanature',
	  	'org.eclipse.ajdt.ui.ajnature',
		'org.eclipse.buildship.core.gradleprojectnature',
		'org.eclipse.wst.common.project.facet.core.nature',
		'org.eclipse.xtext.ui.shared.xtextNature',
		'org.eclipse.pde.PluginNature'
	}
}

repositories {
	maven {
		url "https://github.com/yamtl/yamtl.github.io/raw/mvn-repo/mvn-repo/snapshot-repo"
	}
	//mavenLocal()
	mavenCentral()
    	jcenter()
}


ext {
	yamtlVersion = '0.0.5-SNAPSHOT'
	xtendVersion = '2.18.0'
//	xtendVersion = '2.17.1'
//	xtextVersion = '2.17.1'
	aspectJVersion = '1.9.3'
}


// XTEND: configures output directories for generated java
xtend {
	sourceSets {
		main.xtendOutputDir = 'src/main/xtend-gen'
		test.xtendOutputDir = 'src/test/xtend-gen'
	}
}


sourceSets {
	main {
		java {
			srcDirs = [
				'src/main/java',
				'src/main/emf-gen',
				'src/main/xtend-gen'
			]
		}
	}
	test {
		java {
			srcDir 'src/test/xtend-gen'
		}
	}
}




// ASPECTJ
configurations {
	ajc
	aspects
	aspectCompile
	ajInpath
	compile {
		extendsFrom aspects
	}
}
  
compileJava {

  doLast{
	  ant.taskdef( resource:"org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajc.asPath )
	  ant.iajc(
		  source:"11",
		  target:"11",
		  destDir: sourceSets.main.output.classesDirs[0].absolutePath, 
		  inpath: configurations.ajInpath.asPath,
		  maxmem: "512m",
		  fork: "true",
		  aspectPath:configurations.aspects.asPath,
		  sourceRootCopyFilter:"**/.git/*,**/*.java",
		  classpath:"${configurations.compile.asPath};${configurations.aspectCompile.asPath}"){
		  sourceroots{
			  sourceSets.main.java.srcDirs.each{
				  pathelement(location:it.absolutePath)
			  }
		  }
	  }
  }
}



dependencies {
	compile "org.eclipse.xtend:org.eclipse.xtend.lib:$xtendVersion"
	compile "org.eclipse.xtend:org.eclipse.xtend.core:$xtendVersion"
	compile "org.eclipse.xtend:org.eclipse.xtend.lib.macro:$xtendVersion"

	compile "yamtl:yamtl:${yamtlVersion}"
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
	compile files(
		'./lib/plantuml.jar'
	)
	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	
	compile "com.github.javafaker:javafaker:0.18"
	
	compile 'org.eclipse.emf:org.eclipse.emf.ecore.change:2.11+'
	compile 'org.eclipse.emf:org.eclipse.emf.common:2.14'
	compile 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.15.0'
	
	ajc "org.aspectj:aspectjtools:1.9.3"
	compile "org.aspectj:aspectjrt:1.9.3"
	compile "org.aspectj:aspectjweaver:1.9.3"
	
	ajInpath "yamtl:yamtl:${yamtlVersion}"
	ajInpath  "org.eclipse.emf:org.eclipse.emf.ecore:2.15.0"
}


// create a single Jar with all dependencies
// source: https://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
task fatJar(type: Jar) {
	manifest {
		attributes 'LiveContestDriver': 'YAMTL solution',
			'Implementation-Version': version,
			'Main-Class': mainClassName
	}
	// remove signatures as we are not signing this jar to avoid security warnings
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}
//			'Main-Class': 'ttc2019.live.mutator.CLIRunner' // for packaging the mutator


configurations {
	customConfiguration.extendsFrom(implementation)
}
task customTask {
	doLast {
		println(configurations.customConfiguration.asPath)
		println(sourceSets.main.output.classesDirs[0].absolutePath)
	}
}